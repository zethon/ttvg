language: cpp

addons:
  apt_packages:
    - libgl1-mesa-dev
    - xorg-dev
    - libxcb-render-util0-dev
    - libxcb-xkb-dev
    - libxcb-icccm4-dev
    - libudev-dev
    - libfreetype6-dev
    - libxcb-image0-dev
    - libxcb-keysyms1-dev
    - libxcb-xinerama0-dev

before_script:
- mkdir build && cd build
- conan --version
- conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
- conan remote add owl https://api.bintray.com/conan/zethon/owl
- conan install .. -s build_type=${CONFIG} --build missing
- cmake .. -DCMAKE_BUILD_TYPE=${CONFIG} -DUNIT_TEST=ON -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/build

script:
- cmake --build .
- ctest -VV -C ${CONFIG} --schedule-random --output-on-failure

after_success:
    - |
      if [ "$CONFIG" == "Release" ]; then
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            cmake --build . --config ${CONFIG} --target install
            cpack -G ZIP -C ${CONFIG} --config TTVGCPackConfig.cmake --verbose
        fi
      fi

      - |
      if [ "$TRAVIS_BRANCH" == "master" ] && [ "$CONFIG" == "Release" ]; then
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          find . -maxdepth 1 -name "*.zip" -exec curl -T "{}" ftp://anothermessageboard.com/ --user "${SFTP_USER}:${SFTP_PASSWORD}" --insecure \;
        fi
      fi

matrix:
  include:

  - name: "macOS Xcode 10 Debug"
    os: osx
    compiler: clang
    osx_image: xcode11.4
    install:
      - pip install conan
    env:
      - CONFIG=Debug

  - name: "macOS Xcode 10 Release"
    os: osx
    compiler: clang
    osx_image: xcode11.4
    install:
      - pip install conan
    env:
      - CONFIG=Release

  - name: "Linux gcc Debug"
    os: linux
    dist: bionic
    compiler: gcc
    services: xvfb
    before_install:
      - "export DISPLAY=:99.0"
    install:
      - pip install conan
    env:
      - CONFIG=Debug

  - name: "Linux gcc Release"
    os: linux
    dist: bionic
    compiler: gcc
    services: xvfb
    before_install:
      - "export DISPLAY=:99.0"
    install:
      - pip install conan
    env:
      - CONFIG=Release

notifactions:
  email:
    recipients:
      - max@amb.dog
    on_success: never
    on_failure: always

